trigger:
  branches:
    exclude:
      - '*'

pr:
  branches:
    exclude:
      - '*'

jobs:
- job: WebApp
  displayName: 'Build Web App'
  pool:
    vmImage: 'windows-2019'
  variables:
    BuildConfiguration: 'Release'
  
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET 6 SDK'
    inputs:
      packageType: 'sdk'
      version: '6.0.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: DotNetCoreCLI@2
    displayName: 'Restore'
    inputs:
      command: 'restore'
      projects: '**/WebApp.csproj'
  
  - task: SonarCloudPrepare@1
    displayName: 'Prepare analysis on SonarCloud'
    inputs:
      SonarCloud: 'SonarCloud'
      organization: 'your_organization'
      projectKey: 'WebAppWithDatabaseDemo'
      projectName: 'WebAppWithDatabaseDemo'
      projectVersion: '1.0'
  
  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: 'build'
      projects: '**/WebApp.csproj'
      arguments: '--configuration $(BuildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'Test'
    inputs:
      command: 'test'
      projects: '**/*UnitTest*.csproj'
      arguments: '--configuration $(BuildConfiguration)'
  
  - task: DotNetCoreCLI@2
    displayName: 'Publish'
    inputs:
      command: 'publish'
      publishWebProjects: true
      arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
      zipAfterPublish: true
  
  - task: SonarCloudAnalyze@1
    displayName: 'Run Code Analysis'
  
  - task: SonarCloudPublish@1
    displayName: 'Publish Quality Gate Result'
  
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact (WebApp.zip)'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
      ArtifactName: 'WebApp'

  - task: Docker@2
    displayName: 'Build and push Docker image'
    inputs:
      command: 'buildAndPush'
      repository: 'your_acr_name.azurecr.io/webapp'
      dockerfile: '**/Dockerfile'
      containerRegistry: 'your_azure_container_registry_service_connection'
      tags: |
        $(Build.BuildId)
        latest

- job: Database
  displayName: 'Build Database'
  pool:
    vmImage: 'windows-2019'

  steps:
  - task: MSBuild@1
    displayName: 'Build solution WebApp.Database.sqlproj'
    inputs:
      solution: 'WebApp.Database/WebApp.Database.sqlproj'
      msbuildArguments: '/p:OutDir=$(Build.ArtifactStagingDirectory)'
  
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact (Dacpac)'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'dacpac'

- job: Selenium
  displayName: 'Build UI Tests'
  pool:
    vmImage: 'windows-2019'

  steps:
  - task: NuGetToolInstaller@0
    displayName: 'Use NuGet 4.3.0'

  - task: NuGetCommand@2
    displayName: 'NuGet restore'
    inputs:
      restoreSolution: 'WebAppWithDatabase.sln'

  - task: MSBuild@1
    displayName: 'Build project SeleniumUiTests.csproj'
    inputs:
      solution: 'SeleniumUiTests/SeleniumUiTests.csproj'
      msbuildArguments: '/p:OutDir=$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: UI-Test'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'UI-Test'

- job: Infrastructure
  displayName: 'Copy Infrastructure files (ARM)'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: ARM templates'
    inputs:
      PathtoPublish: 'AzureResourceGroupDeployment'
      ArtifactName: 'arm'
